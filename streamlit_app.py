import streamlit as st
import streamlit.components.v1 as components
import pandas as pd
import requests
import time
import json
import numpy as np
import pytz

from datetime import datetime, timedelta
import fin_processing
import WH_processing
import crm_processing
import recon

st.set_page_config(layout="wide")


st.markdown("# –ó–≤—ñ—Ç –¥–ª—è –∑–≤—ñ—Ä–∫–∏ –¥–∞–Ω–∏—Ö –æ–±–ª—ñ–∫—É SDD")

st.markdown("### –Ø–∫ –ø—Ä–∞—Ü—é—î —Ü–µ–π –∑–≤—ñ—Ç?")

st.markdown('–¶–µ–π –∑–≤—ñ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ—Ç—Ä–∏–º—É—î –∞–∫—Ç—É–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∑ Finance —Ç–∞ CRM –ø—Ä–∏ –∫–æ–∂–Ω–æ–º—É –ø—Ä–æ–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ. '
            '–î–∞–Ω—ñ –∑ —Å–∏—Å—Ç–µ–º–∏ –æ–±–ª—ñ–∫—É —Ç–æ–≤–∞—Ä—ñ–≤ –º–æ–∂–Ω–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ. '
            '–Ø–∫—â–æ –≤–∏ –ø—ñ–¥–≤–∞–Ω—Ç–∞–∂–∏—Ç–µ —Ñ–∞–π–ª –∑ –¥–∞–Ω–∏–º–∏ –∑ —Å–∏—Å—Ç–µ–º–∏ –æ–±–ª—ñ–∫—É —Ç–æ–≤–∞—Ä—ñ–≤, –¥–æ –∑–≤—ñ—Ç–∞ –¥–æ–¥–∞—Å—Ç—å—Å—è —Ç–∞–±–ª–∏—Ü—è –∑ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è–º —Å—É–º–∏ —ñ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ CRM —Ç–∞ —Å–∏—Å—Ç–µ–º—ñ –æ–±–ª—ñ–∫—É —Ç–æ–≤–∞—Ä—ñ–≤. '
            '–¢–∞–∫–æ–∂ –¥–æ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –¥–µ–Ω–Ω–∏—Ö –∫–∞—Å –±—É–¥–µ –¥–æ–¥–∞–Ω–æ –∫–æ–ª–æ–Ω–∫–∏ –∑ –¥–∞–Ω–∏–º–∏ –∑ —Å–∏—Å—Ç–µ–º–∏ –æ–±–ª—ñ–∫—É —Ç–æ–≤–∞—Ä—ñ–≤. '
            '–ó–≤—ñ—Ç –æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è –ø–æ–∫—Ä–æ–∫–æ–≤–æ, —Ç–æ–±—Ç–æ —Å–ø–æ—á–∞—Ç–∫—É –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–±—Ä–∞—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–∞—Ç–∏, –∞ –ø–æ—Ç—ñ–º - —á–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—Ç–∏ —Ñ–∞–π–ª –æ–±–ª—ñ–∫—É —Ç–æ–≤–∞—Ä—ñ–≤. ')

start_date = st.date_input("–û–±–µ—Ä—ñ—Ç—å –¥–∞—Ç—É –ø–æ—á–∞—Ç–∫—É –ø–µ—Ä—ñ–æ–¥—É", datetime.today())
st.write("–û–±—Ä–∞–Ω–æ:", start_date)

end_date = st.date_input("–û–±–µ—Ä—ñ—Ç—å –¥–∞—Ç—É –∫—ñ–Ω—Ü—è –ø–µ—Ä—ñ–æ–¥—É", datetime.today())
st.write("–û–±—Ä–∞–Ω–æ:", end_date)

st.markdown('–î–∞–Ω—ñ –∑ CRM –æ—Ç—Ä–∏–º—É—é—Ç—å—Å—è –∑–∞ –¥–∞—Ç–æ—é —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –∞ –Ω–µ –∑–∞ –¥–∞—Ç–æ—é –æ–ø–ª–∞—Ç–∏. '
            '–¢–æ–∂ –¥–ª—è —Ç–æ–≥–æ, —â–æ–± –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ —Å—Ç–∞—Ä—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –æ–ø–ª–∞—á–µ–Ω—ñ –≤ –ø–æ—Ç–æ—á–Ω–æ–º—É –ø–µ—Ä—ñ–æ–¥—ñ, –¥–æ –¥–∞—Ç–∏ –ø–æ—á–∞—Ç–∫—É –¥–æ–¥–∞—î—Ç—å—Å—è 1 –º—ñ—Å—è—Ü—å (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –æ–±—Ä–∞–≤—à–∏ 1 –ª–∏—Å—Ç–æ–ø–∞–¥–∞ –¥–æ 30 –ª–∏—Å—Ç–æ–ø–∞–¥–∞, —Å–∏—Å—Ç–µ–º–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç—å –¥–∞–Ω—ñ –∑ 1 –∂–æ–≤—Ç–Ω—è.) '
            '–¶–µ –æ–∑–Ω–∞—á–∞—î, —â–æ –¥—É–∂–µ —Å—Ç–∞—Ä—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (—Å—Ç–∞—Ä—à—ñ –∑–∞ –º—ñ—Å—è—Ü—å –¥–æ –ø–æ—á–∞—Ç–∫—É –ø–µ—Ä—ñ–æ–¥–∞) –Ω–µ –±—É–¥—É—Ç—å –≤–∫–ª—é—á–µ–Ω—ñ –≤ –∑–≤—ñ—Ç, –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ –≤–æ–Ω–∏ –æ–ø–ª–∞—á–µ–Ω—ñ –∑–∞—Ä–∞–∑. '
            '–ó–∞ –∑–∞–º–æ–≤—á–∞–Ω–Ω—è–º –¥–∞—Ç–∏ –∑–≤—ñ—Ç—É –≤—Å—Ç–∞–Ω–æ–≤–ª—é—é—Ç—å—Å—è –∑ —Å—å–æ–≥–æ–¥–Ω—ñ –ø–æ —Å—å–æ–≥–æ–¥–Ω—ñ, —Ç–æ–∂ —è–∫—â–æ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω—ñ —ñ–Ω—à—ñ –¥–∞—Ç–∏, –Ω–µ —á–µ–∫–∞–π—Ç–µ, –ø–æ–∫–∏ –¥–∞–Ω—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–∞—Ç—å—Å—è –∑–∞ –∑–∞–º–æ–≤—á–∞–Ω–Ω—è–º —ñ –≤—ñ–¥—Ä–∞–∑—É –æ–±–∏—Ä–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–µ—Ä—ñ–æ–¥. '
            '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –¥–∞–Ω–∏—Ö —ñ —ó—Ö –æ–±—Ä–æ–±–∫–∞ —Ç—Ä–∏–≤–∞—Ç–∏–º–µ –≤ —Å–µ—Ä–µ–¥–Ω—å–æ–º—É 5-7 —Ö–≤–∏–ª–∏–Ω (–ø—Ä—è–º –ø—Ä–æ–ø–æ—Ä—Ü—ñ–π–Ω–æ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –¥–æ–≤–∂–∏–Ω–∏ –æ–±—Ä–∞–Ω–æ–≥–æ –ø–µ—Ä—ñ–æ–¥—É). ')

# loading creds from secrets
_WH_needed = False
cred_api_url = st.secrets['crm']['cred_api_url']
cred_crm_api_key = st.secrets['crm']['cred_crm_api_key']
fin_sdd_url = st.secrets["google"]["fin_sdd_url"]
creds = {
    'type': st.secrets['google']["type"],
    'project_id': st.secrets['google']["project_id"],
    'private_key_id': st.secrets['google']["private_key_id"],
    'private_key': st.secrets['google']["private_key"],
    'client_email': st.secrets['google']["client_email"],
    'client_id': st.secrets['google']["client_id"],
    'auth_uri': st.secrets['google']["auth_uri"],
    'token_uri': st.secrets['google']["token_uri"],
    'auth_provider_x509_cert_url': st.secrets['google']["auth_provider_x509_cert_url"],
    'client_x509_cert_url': st.secrets['google']["client_x509_cert_url"],
    'universe_domain': st.secrets['google']["universe_domain"]
}

# processing fin data

df_finance_sdd_loaded = fin_processing.get_df_from_google_spreadsheet(fin_sdd_url, creds, 'daily odessa')
df_finance_sdd = fin_processing.format_fin_data(df_finance_sdd_loaded)
# st.dataframe(df_finance_sdd.tail(5))

# loading and processing WH data

# processing WH data

WH_options = ['–¢–∞–∫', '–ù—ñ']
selected_WH_option = st.radio('–û–±–µ—Ä—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, —á–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—Ç–∏ —Ñ–∞–π–ª –∑ –æ–±–ª—ñ–∫—É —Ç–æ–≤–∞—Ä—ñ–≤ :', WH_options, key='wh_option')
df_WH = None
aggregated_WH_by_day = None
df_WH_sold_sdd = None


if selected_WH_option=='–¢–∞–∫':
    st.markdown('–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ CSV File –∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∑–∞ –æ–±—Ä–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥.')
    uploaded_file = st.file_uploader("–û–±–µ—Ä—ñ—Ç—å CSV —Ñ–∞–π–ª", type="csv")
    df_WH = WH_processing.process_csv_upload(uploaded_file)
    if df_WH is not None:
        _WH_needed = True
        df_WH, df_WH_sold_sdd, aggregated_WH_by_day = WH_processing.process_WH_data(_WH_needed, df_WH)
else:
    st.write("–ù–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–∞–π–ª üëå")

# st.write('–ü–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ –æ–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö, –∑–∞—á–µ–∫–∞–π—Ç–µ ‚è≥')

#############

# processing crm orders
start_date_utc, start_date_utc_normal, end_date_utc = crm_processing.get_timeframe(start_date, end_date)

df_orders_SDD = crm_processing.get_orders_crm(start_date_utc=start_date_utc, end_date_utc=end_date_utc)
payment_types_dict, statuses_dict = crm_processing.get_dicts_crm()

df_orders_SDD = crm_processing.format_crm_fields(statuses_dict, payment_types_dict, df_orders_SDD)
df_orders_SDD['items_as_string'] = df_orders_SDD['items'].apply(lambda x: str(x))
df_orders_SDD.drop(columns=['items'], inplace=True)

# st.dataframe(df_orders_SDD)
df_orders_SDD_paid = crm_processing.get_paid_crm_orders(df_orders_SDD, start_date_utc_normal, end_date_utc)


st.write('************************************')
st.markdown('### –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –∑–Ω–∏–∂–æ–∫ –∑–∞ –¥–∞–Ω–∏–º–∏ CRM —Ç–∞ –¥–∞–Ω–∏–º–∏ Finance')
st.markdown('–î–∞–Ω—ñ –≤–∏–≤–æ–¥—è—Ç—å—Å—è –∑ –æ–±—Ä–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥.')
df_discounts_merged_nonzero = recon.get_discounts_mismatch(df_orders_SDD_paid, df_finance_sdd)
df_discounts_merged_nonzero.rename(columns={'clean_order_number':'–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è',
                                           'discountTotal':'–ó–Ω–∏–∂–∫–∞ –≤ CRM',
                                           '–°—É–º–º–∞':'–ó–Ω–∏–∂–∫–∞ –≤ Finance',
                                           'diff':'–†–æ–∑–±—ñ–∂–Ω—ñ—Å—Ç—å'}, inplace=True)
st.dataframe(df_discounts_merged_nonzero)

st.write('************************************')
st.markdown('### –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è —Å—É–º, –æ–ø–ª–∞—á–µ–Ω–∏—Ö –Ω–∞–º –∑–∞ –¥–æ—Å—Ç–∞–≤–∫—É –∑–∞ –¥–∞–Ω–∏–º–∏ CRM —Ç–∞ –¥–∞–Ω–∏–º–∏ Finance')
st.markdown('–î–∞–Ω—ñ –≤–∏–≤–æ–¥—è—Ç—å—Å—è –∑ –æ–±—Ä–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥. –Ø–∫—â–æ –≤–∏ –Ω–µ –≤–∫–∞–∑–∞–ª–∏ –Ω–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ —Ä—è–¥–∫—É Finance, —Å—É–º–∞ –∑–Ω–∏–∂–∫–∏ –Ω–µ –ø–æ—Ç—Ä–∞–ø–∏—Ç—å –≤ —Ü–µ–π –∑–≤—ñ—Ç. ')
df_delivery_payed_mismatch = recon.get_delivery_payed_mismatch(df_finance_sdd, df_orders_SDD_paid)
df_delivery_payed_mismatch.rename(columns={'clean_order_number':'–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è',
                                           'discountTotal':'–ó–Ω–∏–∂–∫–∞ –≤ CRM',
                                           '–°—É–º–º–∞':'–ó–Ω–∏–∂–∫–∞ –≤ Finance',
                                           'diff':'–†–æ–∑–±—ñ–∂–Ω—ñ—Å—Ç—å'}, inplace=True)
st.dataframe(df_delivery_payed_mismatch)


st.write('************************************')
st.markdown('### –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è —Å—É–º —Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω—å –∑–∞ –¥–µ–Ω—å –∑–∞ –¥–∞–Ω–∏–º–∏ CRM, Finance —Ç–∞ –æ–±–ª—ñ–∫—É —Ç–æ–≤–∞—Ä—ñ–≤ (–∫–æ–ª–∏ –ø—ñ–¥–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π)')
st.markdown('–î–∞–Ω—ñ –≤–∏–≤–æ–¥—è—Ç—å—Å—è –∑ –æ–±—Ä–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥. –Ø–∫—â–æ –≤–∏ –±–∞—á–∏—Ç–µ –ø–æ—Ä–æ–∂–Ω—ñ–π –±–∞–±–ª –Ω–∞ –º—ñ—Å—Ü—ñ –Ω–æ–º–µ—Ä–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –∑–Ω–∞—á–∏—Ç—å, —è–∫–µ—Å—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —î, –∞–ª–µ –±–µ–∑ –≤–∫–∞–∑–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞. ')
filtered_df = recon.get_timed_daily_data(df_finance_sdd, df_orders_SDD_paid, start_date_utc_normal, end_date_utc)
filtered_df = recon.format_daily_timed_data(filtered_df)
final_df = recon.get_final_daily_comparison(filtered_df, _WH_needed, aggregated_WH_by_day)
st.dataframe(final_df)


st.write('************************************')
st.markdown('### –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—ñ–≤ —ñ —Å—É–º –∑–∞–º–æ–≤–ª–µ–Ω—å –∑–∞ –¥–∞–Ω–∏–º–∏ CRM —Ç–∞ —Å–∏—Å—Ç–µ–º–∏ –æ–±–ª—ñ–∫—É —Ç–æ–≤–∞—Ä—ñ–≤')
df_by_number_final = recon.compare_crm_and_WH_data(df_orders_SDD_paid, df_WH_sold_sdd, _WH_needed)

if _WH_needed:
    st.markdown('–î–∞–Ω—ñ –≤–∏–≤–æ–¥—è—Ç—å—Å—è –∑ –æ–±—Ä–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥. '
                '–ö–æ–¥ CRM - —Ü–µ –Ω–µ –Ω–∞–∑–≤–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –∞ –∞–π–¥—ñ –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è (–≤ —Å–∏—Å—Ç–µ–º—ñ –æ–±–ª—ñ–∫—É —Ç–æ–≤–∞—Ä—É —Ç–∞–∫–æ–∂ –ø—Ä–∏—Å—É—Ç–Ω—î —Ü–µ –ø–æ–ª–µ). ')
    df_by_number_final.rename(columns={'–ü—Ä–æ–≤–µ–¥–µ–Ω?':'–ü—Ä–æ–≤–µ–¥–µ–Ω–æ –≤ CRM',
                                       'status_WH':'–ü—Ä–æ–≤–µ–¥–µ–Ω–æ –≤ –±–∞–∑—ñ',
                                       '–°—É–º–º–∞':'–°—É–º–∞ –≤ –±–∞–∑—ñ',
                                       'totalSumm':'–°—É–º–∞ –≤ CRM',
                                       'clean_order_number':'–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ CRM',
                                       '–ù–æ–º–µ—Ä':'–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç—É —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó –≤ –±–∞–∑—ñ',
                                       'status_name':'–°—Ç–∞—Ç—É—Å –≤ CRM',
                                       '–°—Ç–∞—Ç—É—Å':'–°—Ç–∞—Ç—É—Å –≤ –±–∞–∑—ñ'}, inplace=True)

    st.dataframe(df_by_number_final)

